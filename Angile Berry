
-----Database creation

create Table customer
(customer_id int primary key,
 first_name varchar (35),
 last_name varchar(35)
);

select * from customer

--load data into customer using copy command
copy customer from 
'C:\Program Files\PostgreSQL\Customers.csv' delimiter ',' csv header;

select * from customer

create table employee 
(employee_id int primary key,
 first_name varchar (35),
 last_name varchar (35),
 start_date date,
 end_date date
);

select * from employee

--load data into employee using command copy
copy employee from 
'C:\Program Files\PostgreSQL\Employees.csv' delimiter ',' csv header;
select * from employee

create table product(
	product_id int primary key,
	name varchar (35),
	price float,
	unit varchar 
);
--load data into product using command copy
copy product from
'C:\Program Files\PostgreSQL\Products.csv' delimiter ',' csv header;
select * from product

create table transaction (
	transaction_id varchar (16),
	customer_id int,
	product_id int,
	quantity int,
	paid_at timestamp,
	Amount int
);
drop table transaction

select * from transaction

--load data into transaction using copy command
copy transaction from 
'C:\Program Files\PostgreSQL\Transactions.csv' delimiter ',' csv header;

SET datestyle = dmy;
select * from transaction

--Angie's berry corner's average daily sales volume

select 
	round(avg(quantity)) as avg_quantity_sales,
	round(avg(amount)) as avg_amount
from transaction;

--Which products sell best

select	
 p.product_id, p.name,
 sum (quantity) as total_quantity,
 sum(amount) as total_amt
 from product p join transaction t on 
 p.product_id = t.product_id
 group by 1
 order by 4,3 desc
 limit 4;
 
 --Top 5 angie loyalty customer*****
 
 select c.customer_id,
 		t.amount,
 		concat(first_name, ' ',last_name) as full_name, 
		sum(amount) as total_amt,
		2*(amount) as loyalty_pt 
		from customer c join transaction t on 
		c.customer_id = t.customer_id
		group by 1,2,3
		order by 5 desc
		limit 5;
		
-- What is the full name of their current staff
select * from employee

select employee_id,
	   first_name,
	   last_name,
	   concat(first_name,' ', last_name) as full_name
from employee
where end_date is null;

--What is the product that generate the least income and by how much

 select p.product_id, p.name,
 		sum(amount) as total_income
 from transaction t join product p 
 		on t.product_id = p.product_id
		group by 1
 		order by 3
 		limit 1;
		
--The organization want to ascertain the income realize from sales

select 
		sum (amount) as total_income 
from 	transaction;


--The organization want to ascertain the amount they generate from each product

select p.product_id, p.name,
	   sum(amount) as total_amt
from product p join transaction t 
on p.product_id = t.product_id
	   group by 1
	   order by 3;
	 
	 
--Product that generate the highest income and by how much 

select p.product_id, p.name,
	   SUM(amount) as total_income
from transaction t join product p 
on t.product_id = p.product_id
	   group by 1
	   order by 3 desc
	   limit 1;
	   

--the organization is looking at identifying the customer that patronize 
--them the most in order for them to encourage them with a gift
--*Tips: purchase frequency, average purchase amount, lack of returns, response to survey requests, positive reviews on surveys, and posting positive opinions on social media*  

 
 select c.customer_id, concat(first_name, ' ',last_name) as full_name,
 		round(avg (amount)) as avg_purchase 
 from transaction t join customer c 
      on t.customer_id = c.customer_id
	  group by 1
	  order by 3 desc
	  limit 5;
 			
-- which customer generate least income and by how much?

select c.customer_id, concat(first_name, ' ',last_name),
	   sum(amount) as customer_income
from transaction t join customer c 
	 on t.customer_id = c.customer_id
	 group by 1
	 order by 3
	 limit 5;
	 
	 --***which of the employee spend the least day at angie***.
select * from employee

select employee_id, concat(first_name, ' ',last_name) as full_name, 
		start_date, 
		end_date,
		((end_date - start_date) + 1) as least_day
from employee
group by 1,2,3,4
having end_date is not Null
order by 5
limit 1;				
				
				
--What is the organization busiest hour?  
	
 select Date_part ('hour', paid_at) as buzy_time,
		sum (amount)
		from transaction
		group by 1
		order by 2 desc;
		
--Which day of the week does the organization sales the most
				
				
select date_part('dow', paid_at) AS week_day,
		sum(amount) AS sales
from   transaction 
		group by 1
		order by 2 desc
		limit 1;
				
				
---Which month of the year does the organization makes the most sales
  
select date_part ('month', paid_at) as sales_month,
		sum(amount) as sales
from  transaction 
	    group by 1
		order by 2 desc
		limit 1;		
		
				
				
	